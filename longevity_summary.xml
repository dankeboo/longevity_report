<dashboard version="1.1" theme="dark">
    <label>CMP_longevity_summary</label>
    <fieldset submitButton="true" autoRun="false">
      <input type="text" token="stack_name" searchWhenChanged="false" id="stack_name">
        <label>Stack Name</label>
        <default>longevity-gb-tc1-v2</default>
      </input>
      <input type="text" token="es_sh" searchWhenChanged="false" id="es_sh">
        <label>ES-SH Name</label>
        <default>sh-i-04d5944715e186635</default>
      </input>
      <input type="time" token="global_time" searchWhenChanged="false">
        <label></label>
        <default>
          <earliest>-5d@d</earliest>
          <latest>now</latest>
        </default>
      </input>
      <input type="text" token="bucket_span" searchWhenChanged="false">
        <label>bucket Span</label>
        <default>1d</default>
        <initialValue>1d</initialValue>
      </input>
    </fieldset>
    <row>
      <panel>
        <table>
          <search>
            <query>index=_introspection  sourcetype=splunk_resource_usage component=Hostwide host=i* | rename data.* as * |eval cpu=cpu_system_pct+cpu_user_pct | bucket span=$bucket_span$ _time| stats  avg(cpu) as idx_cpu_usage , avg(mem_used) as idx_avg_mem_usage by _time  | eval idx_avg_mem_usage=round(idx_avg_mem_usage,0) | eval idx_cpu_usage=round(idx_cpu_usage,1)
  | appendcols [|search index=_introspection  sourcetype=splunk_resource_usage component=Hostwide host=sh* host=$es_sh$* | rename data.* as * |eval cpu=cpu_system_pct+cpu_user_pct| bucket span=$bucket_span$ _time| stats  avg(cpu) as es_cpu_usage, avg(mem_used) as es_avg_mem_usage  by _time  | eval es_avg_mem_usage=round(es_avg_mem_usage,0) | eval es_cpu_usage=round(es_cpu_usage,1)]
  | appendcols [|search index=_introspection  sourcetype=splunk_resource_usage component=Hostwide host=sh* host!=$es_sh$** | rename data.* as * |eval cpu=cpu_system_pct+cpu_user_pct| bucket span=$bucket_span$ _time| stats  avg(cpu) as sh_cpu_usage, avg(mem_used) as sh_avg_mem_usage  by _time | eval sh_avg_mem_usage=round(sh_avg_mem_usage,0) | eval sh_cpu_usage=round(sh_cpu_usage,1)]
  
  |table _time, idx_cpu_usage, idx_avg_mem_usage, es_cpu_usage, es_avg_mem_usage, sh_cpu_usage, sh_avg_mem_usage</query>
            <earliest>$global_time.earliest$</earliest>
            <latest>$global_time.latest$</latest>
            <sampleRatio>1</sampleRatio>
          </search>
          <option name="count">20</option>
          <option name="dataOverlayMode">none</option>
          <option name="drilldown">none</option>
          <option name="percentagesRow">false</option>
          <option name="rowNumbers">false</option>
          <option name="totalsRow">false</option>
          <option name="wrap">true</option>
        </table>
      </panel>
    </row>
      <row>
      <panel>
        <table>
          <search>
            <query>
  |search index=_audit  host=sh* info=completed search_id!=*rsa_* search_id!=*subsearch* is_realtime=0 savedsearch_name="" | bucket span=$bucket_span$ _time| stats avg(total_run_time) as avg_run_time by _time| eval AdHoc_avg_run_time=round(avg_run_time,2)
  | appendcols [|search index=_audit   action=search info=completed host=sh*  search_id!=*rsa_scheduler_* search_id!=*subsearch* is_realtime=0 savedsearch_name=*_ACCELERATE_*| bucket span=$bucket_span$ _time| stats avg(total_run_time) as DMA_avg_run_time  by _time| eval DMA_avg_run_time=round(DMA_avg_run_time,2)]
  | appendcols [|search index=_audit  action=search info=completed host=sh*  search_id!=*rsa_scheduler_* search_id!=*subsearch* is_realtime=0 savedsearch_name="*- Rule"| bucket span=$bucket_span$ _time| stats avg(total_run_time) as avg_run_time by _time| eval Corr_avg_run_time=round(avg_run_time,2)]
  | appendcols [|search index=_audit   action=search info=completed host=sh* search_id!=*rsa_scheduler_* search_id!=*subsearch* is_realtime=0 savedsearch_name!="*- Rule" savedsearch_name!="_ACCELERATE_*" savedsearch_name!=""| bucket span=$bucket_span$ _time| stats avg(total_run_time) as avg_run_time by _time| eval Saved_avg_run_time=round(avg_run_time,2)]
  |table _time,AdHoc_avg_run_time, DMA_avg_run_time, Corr_avg_run_time, Saved_avg_run_time</query>
            <earliest>$global_time.earliest$</earliest>
            <latest>$global_time.latest$</latest>
            <sampleRatio>1</sampleRatio>
          </search>
          <option name="count">20</option>
          <option name="dataOverlayMode">none</option>
          <option name="drilldown">none</option>
          <option name="percentagesRow">false</option>
          <option name="rowNumbers">false</option>
          <option name="totalsRow">false</option>
          <option name="wrap">true</option>
        </table>
      </panel>
    </row>
    <row>
      <panel>
        <table>
          <search>
            <query>
  |search index=_audit  host=sh* info=completed search_id!=*rsa_* search_id!=*subsearch* is_realtime=0 savedsearch_name=""| bucket span=1h _time| stats count as AdHoc_hour_count by _time | bucket span=$bucket_span$ _time| stats avg(AdHoc_hour_count) as AdHoc_hour_count by _time | eval AdHoc_hour_count=round(AdHoc_hour_count,1)
  |appendcols [|search index=_audit  host=sh* info=completed search_id!=*rsa_* search_id!=*subsearch* is_realtime=0 savedsearch_name=*_ACCELERATE_*| bucket span=1h _time| stats count as DMA_hour_count by _time | bucket span=$bucket_span$ _time| stats avg(DMA_hour_count) as DMA_hour_count by _time | eval DMA_hour_count=round(DMA_hour_count,1)]
  |appendcols [|search index=_audit  host=sh* info=completed search_id!=*rsa_* search_id!=*subsearch* is_realtime=0 savedsearch_name="*- Rule"| bucket span=1h _time| stats count as Corr_hour_count by _time | bucket span=$bucket_span$ _time| stats avg(Corr_hour_count) as Corr_hour_count by _time | eval Corr_hour_count=round(Corr_hour_count,1)]
  |appendcols [|search index=_audit  host=sh* info=completed search_id!=*rsa_* search_id!=*subsearch* is_realtime=0 savedsearch_name!="*- Rule" savedsearch_name!="_ACCELERATE_*" savedsearch_name!=""| bucket span=1h _time| stats count as Saved_hour_count by _time | bucket span=$bucket_span$ _time| stats avg(Saved_hour_count) as Saved_hour_count by _time| eval Saved_hour_count=round(Saved_hour_count,1) ]
  |table _time, AdHoc_hour_count, DMA_hour_count, Corr_hour_count, Saved_hour_count  </query>
            <earliest>$global_time.earliest$</earliest>
            <latest>$global_time.latest$</latest>
            <sampleRatio>1</sampleRatio>
          </search>
          <option name="count">20</option>
          <option name="dataOverlayMode">none</option>
          <option name="drilldown">none</option>
          <option name="percentagesRow">false</option>
          <option name="rowNumbers">false</option>
          <option name="totalsRow">false</option>
          <option name="wrap">true</option>
        </table>
      </panel>
    </row>
      <row>
      <panel>
        <table>
          <search>
            <query>
              index=_internal  source="*/metrics.log"  group=per_sourcetype_thruput series=syslog | eval gb=60*24*kb/1024/1024/60/24 | bucket span=1d _time| stats sum(gb) as syslog_PVD by _time | eval syslog_PVD=round(syslog_PVD, 1)
              |appendcols [|search index=_internal  source="*/metrics.log" group=per_sourcetype_thruput (series!=syslog AND series!=splunk* AND series!=juniper* AND series!=jboss* AND series!=akamai*)  | eval gb=60*24*kb/1024/1024/60/24 | bucket span=1d _time| stats sum(gb) as ES_PVD by _time | eval ES_PVD=round(ES_PVD, 1) ]
              |appendcols [|search index=_internal  source="*/metrics.log" group=per_sourcetype_thruput(series=juniper* OR series=jboss* OR series=akamai*)   | eval gb=60*24*kb/1024/1024/60/24 | bucket span=1d _time| stats sum(gb) as Canonical_PVD by _time | eval Canonical_PVD=round(Canonical_PVD, 1) ]
              |table _time, syslog_PVD, ES_PVD, Canonical_PVD
            </query>
            <earliest>$global_time.earliest$</earliest>
            <latest>$global_time.latest$</latest>
            <sampleRatio>1</sampleRatio>
          </search>
          <option name="count">20</option>
          <option name="dataOverlayMode">none</option>
          <option name="drilldown">none</option>
          <option name="percentagesRow">false</option>
          <option name="rowNumbers">false</option>
          <option name="totalsRow">false</option>
          <option name="wrap">true</option>
        </table>
      </panel>
    </row>
    </dashboard>